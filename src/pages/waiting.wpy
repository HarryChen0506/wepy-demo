<style lang="less">
  page {
    width: 100%;
    height: 100%;
  }
  .page-waiting {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    // align-items:center;
    // justify-content:center;
    .main {
      width: 100%;
      height: 100vw;
      position: relative;
      .image {
        width: 100%;
        height: 100vw;
      }
      .loading-wrap {
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 105%; 
        .bg {
          position: absolute;
          top:0;
          left:0;
          z-index: 1;
          width: 100%;
          height: 100%;
          background: rgba(220, 220, 220, 0.5);
        }
        .loading {
          position: absolute;
          top:0;
          left:0;
          z-index: 2;
          width: 100%;
          height: 100%;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items:center;
        }
      }
    }
    .footer {
      flex: 1;
      display: flex;
      flex-direction: column;
      align-items:center;
      justify-content:center;
      background:rgba(255,255,255,0.5);
      
      .button {
        &.rechoose {
          margin-bottom: 20rpx;
        }
        line-height:44rpx;
        font-size:32rpx;
        text-align: center;
        padding: 22rpx 0;
        border-radius:4rpx;
        width:600rpx;
        box-sizing:border-box;
        color:white;
      }
      .red {
        background-color:#FF3366;
      }
    }
    .blur {
      filter: blur(10px);
    }
  }
</style>
<template>
  <view class="page-waiting">
    <view class="main">
      <image class="image {{showLoading?'blur':''}}" src="{{iamgePath}}"/>
      <view class="loading-wrap" wx-if="{{showLoading}}">
        <view class="bg"></view>
        <view class="loading">
          <loading></loading>
        </view>        
      </view>
    </view>  
    <view class="footer">
      <view class="button red rechoose" @tap="test">重选照片</view>
      <!-- <view class="button red rechoose" @tap="test1">风格64</view>
      <view class="button red rechoose" @tap="test2">风格124</view> -->
      <view class="button red rechoose" @tap="show">show</view>
      <view class="button red rechoose" @tap="hide">hide</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {styleTransfer, base} from '../services/service.js'
  import {cacheStyle} from '../services/cache.js'
  import loading from '../components/transfer/loading/index'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'waiting'
    }
    components = {
      loading: loading
    }

    mixins = []

    data = {     
      iamgePath: '',
      showLoading: false
    }

    computed = {
      // now () {
      //   return +new Date()
      // }
    }

    methods = {
      test () {
        console.log('test')
        // cacheStyle.set('wo',{name: 123})
        // cacheStyle.set('hah',{name: 12222})
        console.log('cache', cacheStyle)
      },
      test1 () {
        this.segment(this.iamgePath, 64)
      },
      test2 () {
        this.segment(this.iamgePath, 124)
      },
      show () {
        this.onShowLoading()
      },
      hide () {
        this.onHideLoading()
      }
    }

    events = {
      
    }

    async onLoad() {
      const {globalData} = this.$parent
      const demo = [
        'http://tmp/wx21630a5d4651096a.o6zAJsztn2DIgXEGteELseHpiOtU.1pt6jtQ6MgIb779bd49c491911729629c3064e1cb5f0.png',
        // "http://tmp/wxc41d9fc2cdd02cf2.o6zAJsztn2DIgXEGteELseHpiOtU.Qmgo9peaAA1t62c018bbd5dd1595e8f1509d5a1c0e6f.jpg",
        // "http://tmp/wxc41d9fc2cdd02cf2.o6zAJsztn2DIgXEGteELseHpiOtU.Jwh7Vhois7gx5fa447cdf99ebe9bdfaff42b8dee3019.jpg"
      ]
      this.iamgePath = globalData.cropedImagePath || demo[0]
      // this.iamgePath =  demo[0]
      console.log('globalData', globalData)
      // this.segment(this.iamgePath, 64)
    }
    onShowLoading () {
      this.showLoading = true
      this.$invoke('loading', 'onShow');
      wx.navigateTo({url: `/pages/style`})
    }
    onHideLoading () {
      this.showLoading = false
      this.$invoke('loading', 'onHide');
    }
    async segment (localImgPath, styleId) {
      // 判断是否在缓存里
      const cacheKey = `${localImgPath}_styleId_${styleId}`
      if (cacheStyle.get(cacheKey)) {
        console.log('get-cache', cacheStyle)
        return cacheStyle.get(cacheKey)
      }
      // 先上传到静态服务器
      const {url} = await base.upload(localImgPath)
      // 再进行风格迁移
      const data = await styleTransfer.segment(url, styleId)      
      console.log('set-cache', cacheStyle)
      return cacheStyle.set(cacheKey, data)
    }
  }
</script>
